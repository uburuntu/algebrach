[tool.poetry]
name = "algebrach"
license = "MIT"
homepage = "https://t.me/algebrach_bot"
repository = "https://github.com/uburuntu/algebrach"
authors = ["uburuntu <ramzan.bekbulatov@pm.me>"]
version = "1.0.0"
description = "A Telegram bot for the https://t.me/mechmath community"
readme = "README.md"
packages = [{ include = "app" }]

[tool.poetry.dependencies]
python = "^3.11"
aiogram = { version = "^3.4.1", extras = ["fast", "i18n", "redis"] }
pydantic = "^2.0.2"
pydantic-settings = "^2.0.1"
pyairtable = "^1.5.0"
pytz = "^2024.1"
throttler = "^1.2.2"
aiocache = "^0.12.1"

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-mock = "*"
pytest-asyncio = "*"
pre-commit = "*"
black = "*"
ruff = "*"
ipython = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
fix = true
unfixable = [
    "ERA", # do not autoremove commented out code
    "F841", # do not autoremove unused variables
]
target-version = "py311"
line-length = 88
extend-select = [
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "I", # isort
    "N", # pep8-naming
    "PIE", # flake8-pie
    "PGH", # pygrep
    "RUF", # ruff checks
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "UP", # pyupgrade
]

[tool.ruff.isort]
known-local-folder = ["app", "tests"]
combine-as-imports = true
lines-between-types = 1

[tool.black]
target-version = ['py311']
line-length = 88
preview = true

[tool.pytest.ini_options]
pythonpath = ["./app"]
testpaths = ["tests"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
